{% extends 'base.html.twig' %}

{% block title %}Mon Profil{% endblock %}

{% block body %}

{% if user %}
    <div class="profile-container">
        <div class="profile-header">
            {% if app.user.sexe == 'Masculin' %}
                <h1>Bienvenue, M. {{ user.nom }}</h1>
            {% else %}
                <h1>Bienvenue Mme. {{ user.nom }}</h1>
            {% endif %}
        </div>

        <div class="profile-content">
            <div class="profile-photo">
                <img id="profileImagePreview" src="{{ user.photo ? asset('uploads/profilePics/' ~ user.photo) : asset('images/default-avatar-icon-of-social-media-user-vector.jpg') }}" alt="Profile Photo">
                <form id="profileImageForm" method="post" action="{{ path('app_profile_changeProfileImg', {'id': user.id}) }}" enctype="multipart/form-data" style="display: none;">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('profile_image_change') }}">
                    <input type="file" id="profileImage" name="profileImage" class="form-control" accept="image/*" onchange="previewImage(event)">
                </form>
                <a class="btn" id="changeImageBtn" onclick="triggerImageSelection()">Changer la photo de Profil</a>
            </div>

            <div class="profile-details" id="profile-details">
                <div class="detail-box">
                    {{ form_start(userForm, {'method': 'POST', 'action': path('app_profile_edit', {'id': user.id})}) }}
                        {{ form_widget(userForm._token)}}
                        {{ form_row(userForm.nom, { 'attr': {'class': 'form-control', 'id': 'nom' }}) }}
                        {{ form_row(userForm.prenom, { 'attr': {'class': 'form-control', 'id': 'prenom' }}) }}
                        {{ form_row(userForm.email, { 'attr': {'class': 'form-control', 'id': 'email' }}) }}
                        {{ form_row(userForm.dateNaissance, { 'attr': {'class': 'form-control', 'id': 'dateNaissance' }}) }}
                        {{ form_row(userForm.sexe, { 'attr': {'class': 'form-control', 'id': 'sexe' }}) }}
                    {{ form_end(userForm, {'render_rest': false}) }}

                    <button onclick="displayPasswordDiv(event)" class="btn">Changer le mot de passe</button>
                    <div class="change-password-container" style="display: none;">
                        {{ form_start(passwordForm, {'method': 'POST', 'action': path('app_profile_changePassword', {'id': user.id})}) }}
                        {{ form_widget(passwordForm._token)}}
                        <input type="text" id="oldPassword" name="oldPassword" placeholder="Ancien mot de passe" required>
                        {{ form_row(passwordForm.password, { 'attr': { 'id': 'oldPassword' }}) }}
                        <button type="submit" class="btn">Changer le mot de passe</button>
                    {{ form_end(passwordForm, {'render_rest': false}) }}
                    </div>
                </div>

                <button class="btn" id="modifier-btn" onclick="editProfileInfo()">Modifier</button>
            </div>
        </div>

        <div class="orders-section">
           
            <h2>Mes Commandes</h2>
            <div class="orders-container">
                {% for course in courses %}
                    <div class="order-item">
                        <div class="order-info">
                            <h3>Course</h3>
                            <p>Commande: {{ course.publicId }}</p>
                            <p>Date: {{ course.dateDepart|date('d/m/Y H:i') }}</p>
                            <p>Montant: {{ course.prix }} €</p>
                        </div>
                        <div>
                            <a class="order-devis btn" href="">Devis</a>
                            <button class="btn" id="showMoredetailsBtn" onclick="showMoreDetails(event)">Voir plus</button>
                        </div>
                        <div class="more-details" style="display: none;">
                            <h3>Détails de la course</h3>
                            <p>Adresse de départ: {{ course.adresseDepart }}</p>
                            <p>Adresse d'arrivée: {{ course.adresseArivee }}</p>
                            {% if course.chauffeur.sexe == 'Feminin' %} 
                                <p>Chauffeur: Mme. {{ course.chauffeur.nom }}</p>
                            {% endif %} 
                        </div>
                    </div>
                {% else %}
                    <p>Aucune commande disponible.</p>
                {% endfor %}
            </div>
        </div>
    </div>
{% endif %}
{% endblock %}

{% block javascripts %}
<script>
    function displayPasswordDiv(event) {
        const display = document.querySelector('.change-password-container');
        const btn = event.target;
        if (display.style.display === 'none') {
            display.style.display = 'block';
            btn.innerText = 'Annuler';
            event.preventDefault();
        } else {
            display.style.display = 'none';
            btn.innerText = 'Changer le mot de passe';
        }
    }

    function showThePassword(event) {
        const btn = event.target;
        const passwordInput = btn.previousElementSibling;
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            btn.innerText = 'Masquer';
        } else {
            passwordInput.type = 'password';
            btn.innerText = 'Afficher';
        }
    }

    function showMoreDetails(event) {
        const orderItem = event.target.closest('.order-item');
        const moreDetails = orderItem.querySelector('.more-details');
        const btn = event.target;
        if (moreDetails.style.display === 'block') {
            moreDetails.style.opacity = 0;
            setTimeout(() => {
                moreDetails.style.display = 'none';
                btn.innerText = 'Voir plus';
            }, 300);
        } else {
            moreDetails.style.display = 'block';
            setTimeout(() => {
                moreDetails.style.opacity = 1;
                btn.innerText = 'Fermer';
            }, 10);
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        const buttons = document.querySelectorAll('.showMoreDetailsBtn');
        buttons.forEach(button => {
            button.addEventListener('click', showMoreDetails);
        });
    });

    function triggerImageSelection() {
        document.getElementById('profileImage').click();
    }

    function previewImage(event) {
        const cancelButton = document.createElement('button');
        cancelButton.classList.add('btn');
        cancelButton.id = 'cancel-btn';        
        cancelButton.textContent = 'Annuler';
        cancelButton.style.display = 'none';
        cancelButton.onclick = cancelImageSelection;
        var reader = new FileReader();
        reader.onload = function() {
            var output = document.getElementById('profileImagePreview');
            output.src = reader.result;
            document.getElementById('changeImageBtn').textContent = 'Valider';
            document.getElementById('changeImageBtn').style.display = 'block';
            document.getElementById('changeImageBtn').onclick = submitImageForm;
            cancelButton.style.display = 'block';
            document.getElementById('changeImageBtn').parentNode.insertBefore(cancelButton, document.getElementById('changeImageBtn').nextSibling);
        };
        reader.readAsDataURL(event.target.files[0]);
    }
    function cancelImageSelection(event) {
        document.getElementById('profileImagePreview').src = '{{ user.photo ? asset("uploads/profilePics/" ~ user.photo) : asset("images/default-avatar-icon-of-social-media-user-vector.jpg") }}';
        document.getElementById('changeImageBtn').textContent = 'Modifier l\'image';
        document.getElementById('changeImageBtn').onclick = triggerImageSelection;
        document.getElementById('cancel-btn').remove();
    }
    function submitImageForm() {
        document.getElementById('profileImageForm').submit();
    }

    function editProfileInfo() {
        const editableElements = [
            document.getElementById('nom'),
            document.getElementById('prenom'),
            document.getElementById('email'),
            document.getElementById('dateNaissance'),
        ];

        editableElements.forEach(element => {
            if (element) {
                element.contentEditable = true;
                element.style.backgroundColor = 'white';
                element.style.border = '1px solid #ccc';
                element.style.padding = '1px';
                element.style.borderRadius = '3px';
            }
        });

        const sexeSpan = document.getElementById('sexe');
        const sexeOptions = ['Masculin', 'Féminin'];
        const sexeSelect = document.createElement('select');
        sexeSelect.id = 'sexeSelect';

        sexeOptions.forEach(option => {
            const opt = document.createElement('option');
            opt.value = option;
            opt.textContent = option;
            sexeSelect.appendChild(opt);
        });

        sexeSelect.value = sexeSpan.textContent;
        sexeSpan.replaceWith(sexeSelect);

        const profileDetails = document.getElementById('profile-details');
        if (!document.getElementById('annuler-btn')) {
            document.getElementById('modifier-btn').style.display = 'none';
            const cancelButton = document.createElement('button');
            cancelButton.id = 'annuler-btn';
            cancelButton.className = 'btn';
            cancelButton.textContent = 'Annuler';
            cancelButton.style.marginRight = '10px';
            cancelButton.onclick = cancelEdit;

            const validateButton = document.createElement('button');
            validateButton.id = 'valider-btn';
            validateButton.className = 'btn';
            validateButton.textContent = 'Valider';
            validateButton.onclick = saveChanges;

            profileDetails.appendChild(cancelButton);
            profileDetails.appendChild(validateButton);
        }
    }

    function cancelEdit() {
        location.reload();
    }

    function saveChanges() {
        const updatedDetails = {// creation d'une var tableau qui contient les infos modifiées
            nom: document.getElementById('nom').textContent.trim(),
            prenom: document.getElementById('prenom').textContent.trim(),
            email: document.getElementById('email').textContent.trim(),
            dateNaissance: document.getElementById('dateNaissance').textContent.trim(),
            sexe: document.getElementById('sexeSelect').value,
        };

        const form = document.createElement('form');//creation d'un formulaire pour envoyer les info modifiés a la bdd
        form.method = 'POST';
        form.action = "{{ path('app_profile_edit', {'id': user.id}) }}";

        for (const [key, value] of Object.entries(updatedDetails)) {// pour chaque clé - valeur : clé = nom, valeur = valeur
            // Object.entries(updatedDetails) signifie que l'on parcourt le tableau updatedDetails
            // Et on cree un input pour chaque clé - valeur
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = key;
            input.value = value;
            form.appendChild(input);
        }
        // on ajoute un token csrf au formulaire
        const csrfTokenInput = document.createElement('input');
        csrfTokenInput.type = 'hidden';
        csrfTokenInput.name = '_csrf_token';
        csrfTokenInput.value = "{{ csrf_token('profile_edit') }}";
        form.appendChild(csrfTokenInput);

        document.body.appendChild(form);//on ajoute le formulaire a la page
        form.submit();
    }
</script>
{% endblock %}
